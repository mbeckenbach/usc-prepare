# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Pull Request

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# We need to set this in order to cache the cypress binary files
env:
  CYPRESS_CACHE_FOLDER: cypress/cache

jobs:

  affected:

    runs-on: ubuntu-latest

    steps:
      # region: Checkout repository

      - name: "Checkout repository for running on branches"
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0

      - name: "Checkout repository for running on pull request"
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      # endregion

      # region: Prepare

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - name: Prepare node_modules & cypress
        uses: ./.github/actions/npm_ci

      # endregion

      - name: Find affected apps
        id: find-affected-apps
        run: echo "::set-output name=affected::$(node ./tools/find-affected-apps.js)"

      # region test
      #
      #      - name: Lint
      #        run: npx nx run-many --target=lint --all --parallel
      #        continue-on-error: true
      #
      #      - name: Unit Tests
      #        run: npx nx run-many --target=test --all --parallel
      #        continue-on-error: false
      #
      #      - name: End-to-End Tests
      #        run: npx nx run-many --target=e2e --all --parallel
      #        continue-on-error: false

      # endregion

      # region build

      - name: Build
        if: ${{ fromJSON(steps.find-affected-apps.outputs.affected).hasAffected }}
        run: npx nx run-many --target=build -c production --all --parallel
        continue-on-error: false

      - name: Zip build artifact
        if: ${{ fromJSON(steps.find-affected-apps.outputs.affected).hasAffected }}
        run: zip -r build.zip . -i ./build/*

      - name: Archive build artifact
        if: ${{ fromJSON(steps.find-affected-apps.outputs.affected).hasAffected }}
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist

      # endregion
